stages:
  - build
  - release
  - sync

build_package:
  stage: build
  tags:
    - VJUNIXINFRA
  script:
    - echo "Building package..."
    - mkdir -p dist
    - tar -czf dist/gitlab-monitor-${CI_COMMIT_TAG}.tar.gz gitlab-public-repo-monitor.sh template.en.md template.fr.md config.conf.example
    - cp dist/gitlab-monitor-${CI_COMMIT_TAG}.tar.gz dist/gitlab-monitor-latest.tar.gz
  artifacts:
    paths:
      - dist/*.tar.gz
    expire_in: 1h

create_release:
  stage: release
  tags:
    - VJUNIXINFRA
  needs:
    - job: build_package
      artifacts: true
  rules:
    - if: '$CI_COMMIT_TAG'
  script:
    - echo "--- Creating release with glab ---"
    - echo "CI_COMMIT_TAG=${CI_COMMIT_TAG}"
    - echo "CI_PROJECT_URL=${CI_PROJECT_URL}"
    - /usr/bin/glab auth login --hostname "${CI_SERVER_HOST}" --token "${RELEASE_ACCESS_TOKEN}"
    - echo "--- Creating release with files ---"
    - '/usr/bin/glab release create "${CI_COMMIT_TAG}" --name "Release ${CI_COMMIT_TAG}" --notes "Version ${CI_COMMIT_TAG}. Voir CHANGELOG.md." dist/gitlab-monitor-latest.tar.gz dist/gitlab-monitor-${CI_COMMIT_TAG}.tar.gz'
    - echo "Release created successfully."

sync_to_gitlab_com:
  stage: sync
  variables:
    GIT_STRATEGY: none
  script:
    - echo "--- Mirroring branches and tags to GitLab.com (exclude .gitlab-ci.yml) ---"
    - git config --global user.name "CI Mirror Bot"
    - git config --global user.email "ci-mirror@example.com"

    # Cloner le dépôt complet
    - rm -rf tmp_mirror || true
    - git clone https://gitlab-ci-token:${CI_JOB_TOKEN}@${CI_SERVER_HOST}/${CI_PROJECT_NAMESPACE}/${CI_PROJECT_NAME}.git tmp_mirror
    - cd tmp_mirror

    # Supprimer le fichier .gitlab-ci.yml pour la synchro
    - git rm --cached .gitlab-ci.yml || true
    - git commit -m "Remove CI file for GitLab.com sync" || true

    # Ajouter le remote GitLab.com
    - git remote add mirror https://oauth2:${GITLAB_COM_TOKEN}@gitlab.com/Barikad/gitlabmonitor.git

    # Pousser main et tags
    - git push mirror main
    - git push mirror --tags

stages:
  - build
  - release
  - sync   # ðŸ”¹ nouveau stage dÃ©diÃ©

build_package:
  stage: build
  tags:
    - VJUNIXINFRA
  script:
    - echo "Building package..."
    - mkdir -p dist
    - tar -czf dist/gitlab-monitor-${CI_COMMIT_TAG}.tar.gz gitlab-public-repo-monitor.sh template.en.md template.fr.md config.conf.example
    - cp dist/gitlab-monitor-${CI_COMMIT_TAG}.tar.gz dist/gitlab-monitor-latest.tar.gz
  artifacts:
    paths:
      - dist/*.tar.gz
    expire_in: 1h

create_release:
  stage: release
  tags:
    - VJUNIXINFRA
  needs:
    - job: build_package
      artifacts: true
  rules:
    - if: '$CI_COMMIT_TAG'
  script:
    - echo "--- Creating release with glab ---"
    - echo "CI_COMMIT_TAG=${CI_COMMIT_TAG}"
    - echo "CI_PROJECT_URL=${CI_PROJECT_URL}"
    - /usr/bin/glab auth login --hostname "${CI_SERVER_HOST}" --token "${RELEASE_ACCESS_TOKEN}"
    - echo "--- Creating release with files ---"
    - '/usr/bin/glab release create "${CI_COMMIT_TAG}" --name "Release ${CI_COMMIT_TAG}" --notes "Version ${CI_COMMIT_TAG}. Voir CHANGELOG.md." dist/gitlab-monitor-latest.tar.gz dist/gitlab-monitor-${CI_COMMIT_TAG}.tar.gz'
    - echo "Release created successfully."

mirror_to_gitlab_com:
  stage: sync
  tags:
    - VJUNIXINFRA
  script:
    - echo "--- Mirroring repo to GitLab.com ---"
    - git config --global user.name "CI Mirror Bot"
    - git config --global user.email "ci-mirror@example.com"
    # ðŸ”¹ Ajout ou mise Ã  jour du remote 'mirror'
    - |
      if git remote get-url mirror >/dev/null 2>&1; then
        git remote set-url mirror https://oauth2:${GITLAB_COM_TOKEN}@gitlab.com/Barikad/gitlabmonitor.git
      else
        git remote add mirror https://oauth2:${GITLAB_COM_TOKEN}@gitlab.com/Barikad/gitlabmonitor.git
      fi
    - git push --mirror mirror
  rules:
    - if: '$CI_COMMIT_BRANCH || $CI_COMMIT_TAG'

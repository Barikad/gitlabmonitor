stages:
  - lint
  - build
  - release

lint_ci:
  stage: lint
  rules:
    - when: always
  script:
    - echo "Running GitLab CI Lint..."
    - |
      curl --fail --request POST \
        --header "PRIVATE-TOKEN: ${RELEASE_ACCESS_TOKEN}" \
        --header "Content-Type: application/json" \
        --data "{\"content\": \"$(sed 's/\"/\\"/g' .gitlab-ci.yml | tr -d '\n')\"}" \
        "${CI_API_V4_URL}/ci/lint"

build_package:
  stage: build
  image: alpine:latest
  rules:
    - if: '$CI_COMMIT_TAG'
  needs: [ "lint_ci" ]
  script:
    - echo "Debugging file structure"
    - echo "CI_PROJECT_DIR is ${CI_PROJECT_DIR}"
    - ls -la "${CI_PROJECT_DIR}"
    - VERSIONED_PACKAGE_NAME="gitlab-monitor-${CI_COMMIT_TAG}.tar.gz"
    - LATEST_PACKAGE_NAME="gitlab-monitor-latest.tar.gz"
    - echo "Archiving project files"
    - tar -C "${CI_PROJECT_DIR}" --exclude=.git -czvf "${VERSIONED_PACKAGE_NAME}" .
    - echo "Package ${VERSIONED_PACKAGE_NAME} created successfully"
    - echo "Creating a stable latest copy"
    - cp "${VERSIONED_PACKAGE_NAME}" "${LATEST_PACKAGE_NAME}"
    - echo "Created stable package ${LATEST_PACKAGE_NAME}"
  artifacts:
    paths:
      - "*.tar.gz"
    expire_in: 1 hour

create_release:
  stage: release
  rules:
    - if: '$CI_COMMIT_TAG'
  needs:
    - job: lint_ci
    - job: build_package
      artifacts: true
  script:
    - echo "Creating GitLab Release ${CI_COMMIT_TAG}"
    - echo "Token length: ${#RELEASE_ACCESS_TOKEN}"
    - echo "Token starts with: ${RELEASE_ACCESS_TOKEN:0:4}***"
    - echo "Testing API access..."
    - curl -v --header "PRIVATE-TOKEN: ${RELEASE_ACCESS_TOKEN}" "${CI_API_V4_URL}/projects/${CI_PROJECT_ID}"
    - |
      echo "Preparing JSON..."
      RELEASE_DATA=$(cat <<EOF
      {
        "name": "Release ${CI_COMMIT_TAG}",
        "tag_name": "${CI_COMMIT_TAG}",
        "description": "Version ${CI_COMMIT_TAG}. Voir CHANGELOG.md.",
        "assets": {
          "links": [
            {
              "name": "gitlab-monitor-${CI_COMMIT_TAG}.tar.gz",
              "url": "${CI_PROJECT_URL}/-/jobs/artifacts/${CI_COMMIT_TAG}/raw/gitlab-monitor-${CI_COMMIT_TAG}.tar.gz?job=build_package",
              "link_type": "package"
            },
            {
              "name": "gitlab-monitor-latest.tar.gz",
              "url": "${CI_PROJECT_URL}/-/jobs/artifacts/${CI_COMMIT_TAG}/raw/gitlab-monitor-latest.tar.gz?job=build_package",
              "link_type": "other"
            }
          ]
        }
      }
      EOF
      )
      echo "${RELEASE_DATA}" > release.json
    - |
      echo "Sending release request..."
      curl --fail --request POST \
        --header "PRIVATE-TOKEN: ${RELEASE_ACCESS_TOKEN}" \
        --header "Content-Type: application/json" \
        --data @release.json \
        "${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/releases"

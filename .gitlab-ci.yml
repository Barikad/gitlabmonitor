---
stages:
  - build
  - release

build_package:
  stage: build
  tags:
    - VJUNIXINFRA
  script:
    - echo "Building package..."
    - mkdir -p dist
    - tar -czf dist/gitlab-monitor-${CI_COMMIT_TAG}.tar.gz gitlab-public-repo-monitor.sh template.en.md template.fr.md config.conf.example
    - cp dist/gitlab-monitor-${CI_COMMIT_TAG}.tar.gz dist/gitlab-monitor-latest.tar.gz
  artifacts:
    paths:
      - dist/*.tar.gz
    expire_in: 1h

create_release:
  stage: release
  tags:
    - VJUNIXINFRA
  needs:
    - job: build_package
      artifacts: true
  rules:
    - if: '$CI_COMMIT_TAG'
  script:
    - echo "--- Creating release with glab ---"
    - echo "CI_COMMIT_TAG=${CI_COMMIT_TAG}"
    - echo "CI_PROJECT_URL=${CI_PROJECT_URL}"
    - echo "--- Authenticating with GitLab ---"
    - /usr/bin/glab auth login --hostname "${CI_SERVER_HOST}" --token "${RELEASE_ACCESS_TOKEN}"
    - echo "--- Collecting existing files ---"
    - |
      FILES_TO_RELEASE=()
      for f in dist/gitlab-monitor-latest.tar.gz dist/gitlab-monitor-${CI_COMMIT_TAG}.tar.gz; do
        if [[ -f "$f" ]]; then
          FILES_TO_RELEASE+=("$f")
        else
          echo "WARNING: File $f does not exist, skipping."
        fi
      done
    - |
      if [[ ${#FILES_TO_RELEASE[@]} -eq 0 ]]; then
        echo "ERROR: No files to release, aborting."
        exit 1
      fi
    - echo "--- Creating release with available files ---"
    - /usr/bin/glab release create "${CI_COMMIT_TAG}" --name "Release ${CI_COMMIT_TAG}" --notes "Version ${CI_COMMIT_TAG}. Voir CHANGELOG.md." "${FILES_TO_RELEASE[@]}"
    - echo "Release created successfully with files: ${FILES_TO_RELEASE[*]}"
